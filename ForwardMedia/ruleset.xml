<?xml version="1.0"?>
<ruleset name="Forward">
	<description>PHP Coding Standard for FORWARD MEDIA</description>

	<exclude-pattern>*.js</exclude-pattern>
	<exclude-pattern>*.css</exclude-pattern>

	<exclude-pattern>*/typo3/sysext/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/crawler/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/direct_mail/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/extension_builder/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/gridelements/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/l10nmgr/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/powermail/*</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/realurl/*</exclude-pattern>

	<exclude-pattern>*/typo3conf/LocalConfiguration.php</exclude-pattern>
	<exclude-pattern>*/typo3conf/PackageStates.php</exclude-pattern>
	<!-- TCA files directly in TCA are generated by extension builder -->
	<exclude-pattern>*/Configuration/TCA/[^/]+.php</exclude-pattern>
<!--
	<exclude-pattern>*/typo3conf/ext/*/ext_*.php</exclude-pattern>
	<exclude-pattern>*/typo3conf/ext/*/Configuration/RequestMiddlewares.php</exclude-pattern>
	<exclude-pattern>*/typo3conf/AdditionalConfiguration*.php</exclude-pattern>
 -->
	<!-- TODO: Check https://github.com/consistence/coding-standard/blob/master/Consistence/ruleset.xml -->

	<rule ref="ForwardMedia.WhiteSpace.NoLinebreakBeforeCatch" />

	<rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation">
		<exclude-pattern>*/ext_emconf.php</exclude-pattern>
	</rule>
	<rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma">
		<exclude-pattern>*/TCA/*.php</exclude-pattern>
	</rule>
	<rule ref="Generic.Arrays.DisallowLongArraySyntax" />
	<rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement" />
	<rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace" />



	<rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration" />
	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment" />
	<rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration" />
	<rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment" />
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
		<properties>
			<property name="forbiddenAnnotations" type="array">
				<element value="@author" />
				<element value="@copyright" />
				<element value="@license" />
				<element value="@package" />
				<element value="@throws" />
				<element value="@version" />
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
		<properties>
			<property name="forbiddenCommentPatterns" type="array">
				<element value="/^action ([^ ]+)$/" />
				<element value="/^Auto-generated Migration: Please modify to your needs/" />
			</property>
		</properties>
	</rule>


	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch" />
	<rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses" />
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator" />
	<rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator" />

	<!-- sometimes it is better to explicitly return true after a set of conditions which all return false... -->
	<!-- <rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn" /> -->
	<rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses">
		<!-- Autogenerated code includes die() -->
		<exclude-pattern>*/typo3conf/*/TCA/*.php</exclude-pattern>
		<exclude-pattern>*/packages/*/TCA/*.php</exclude-pattern>
		<exclude-pattern>*/ext_tables.php</exclude-pattern>
		<exclude-pattern>*/ext_localconf.php</exclude-pattern>
	</rule>


	<rule ref="SlevomatCodingStandard.Classes.ClassStructure">
		<properties>
			<property name="groups" type="array">
				<!-- uses, public constants, protected constants, private constants, public properties, public static properties, protected properties, protected static properties, private properties, private static properties, constructor, static constructors, destructor, magic methods, public methods, protected methods, private methods, public final methods, public static final methods, protected final methods, protected static final methods, public abstract methods, public static abstract methods, protected abstract methods, protected static abstract methods, public static methods, protected static methods, private static methods, private methods -->
				<element value="uses"/>

				<element value="constants"/>

				<element value="properties"/>

				<element value="constructor"/>
				<element value="methods"/>
			</property>
		</properties>
	</rule>
	<!-- <rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
		<properties>
			<property name="minLinesCountBeforeWithComment">1</property>
			<property name="maxLinesCountBeforeWithComment">3</property>
			<property name="minLinesCountBeforeWithoutComment">1</property>
			<property name="maxLinesCountBeforeWithoutComment">3</property>
		</properties>
	</rule> -->
	<rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding" />

	<rule ref="SlevomatCodingStandard.Classes.MethodSpacing">
		<properties>
			<property name="maxLinesCount" value="3" />
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference" />
	<rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration" />
	<!-- This only works in PHP >=7.1 -->
	<rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />

	<!-- Empty classes give an errors -->
	<!-- <exclude name="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces" /> -->

	<!-- We use the name suffixes -->
	<!-- <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming" /> -->
	<!-- <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming" /> -->
	<!-- <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming" /> -->
	<!-- <exclude name="SlevomatCodingStandard.Classes.SuperfluousTraitNaming" /> -->


	<rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />
	<rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue" />
	<rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration" />
	<rule ref="SlevomatCodingStandard.Functions.DisallowEmptyFunction">
		<!-- TYPO3 Controller Actions might be empty, if they only render the template -->
		<exclude-pattern>*/Classes/Controller/*Controller.php</exclude-pattern>
	</rule>
	<!-- too many occurences because it does not check overwritten methods -->
	<!-- <exclude name="SlevomatCodingStandard.Functions.UnusedParameter" /> -->


	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace" />
	<rule ref="SlevomatCodingStandard.Namespaces.UselessAlias" />
	<rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile" />
	<rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration" />
	<rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse" />
	<rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine" />
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash" />

	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
		<properties>
			<property name="searchAnnotations" value="true" />
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
		<properties>
			<property name="allowFullyQualifiedNameForCollidingClasses" value="true" />
			<property name="allowFullyQualifiedNameForCollidingFunctions" value="true" />
			<property name="allowFullyQualifiedNameForCollidingConstants" value="true" />
			<property name="allowFullyQualifiedGlobalClasses" value="true" />
			<property name="allowFallbackGlobalFunctions" value="true" />
			<property name="allowFallbackGlobalConstants" value="true" />
		</properties>

		<!-- TCA Code should use Fully-Qualified-ClassNames -->
		<exclude-pattern>*/Configuration/TCA/*.php</exclude-pattern>
		<exclude-pattern>*/Configuration/FCE/*.php</exclude-pattern>
		<exclude-pattern>*/ext_localconf.php</exclude-pattern>
		<exclude-pattern>*/ext_tables.php</exclude-pattern>
		<exclude-pattern>*/AdditionalConfiguration.php</exclude-pattern>
		<exclude-pattern>*/AdditionalConfiguration.sample.php</exclude-pattern>
		<exclude-pattern>*/AdditionalFactoryConfiguration.php</exclude-pattern>
		<exclude-pattern>*/database/(clearcache.inc|clearcache|ensure-php-version|export|get-connection|import|kb-import|last-change|version-data).php</exclude-pattern>

		<exclude-pattern>Configuration/Console/Commands.php</exclude-pattern>
		<exclude-pattern>Configuration/Commands.php</exclude-pattern>
		<exclude-pattern>Configuration/RequestMiddlewares.php</exclude-pattern>
	</rule>


	<rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing" />
	<!-- <rule ref="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators" /> -->
	<rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator" />
	<rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing">
		<properties>
			<property name="spacesCount" value="0" />
		</properties>
	</rule>


	<rule ref="SlevomatCodingStandard.PHP.DisallowDirectMagicInvokeCall" />
	<!-- <rule ref="SlevomatCodingStandard.PHP.RequireNowdoc" /> -->
	<rule ref="SlevomatCodingStandard.PHP.UselessParentheses" />
	<rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking" />
	<rule ref="SlevomatCodingStandard.PHP.UselessSemicolon" />
	<rule ref="SlevomatCodingStandard.PHP.ShortList" />
	<rule ref="SlevomatCodingStandard.PHP.TypeCast" />


	<rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints" />
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing" />
	<rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition" />
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing" />
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHintSpacing" />


	<!-- <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable" /> -->
	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable" />

	<!--
		This Sniff disallows
			$a = 1;
			return $a;
		But two individial statements might make the code easier to understand
	-->
	<!-- <rule ref="SlevomatCodingStandard.Variables.UselessVariable" /> -->

	<rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
		<!--
			TODO: Modify this rule to also ignore variables assigned in list():
			`list($unused, $type) = explode(':', $string);`
			This can be used to document, what the first part contains
		-->
		<properties>
			<property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true" />
		</properties>

		<exclude-pattern>*/database/*.php</exclude-pattern>
	</rule>

	<!-- ########################################### -->


	<!-- check for usage of undefined variables -->
	<rule ref="VariableAnalysis">
		<!--
			allow unused variables, because the linter currently warns on unused
			function arguments even if they are defined in a parent class
		-->
		<exclude name="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable" />
		<exclude name="VariableAnalysis.CodeAnalysis.VariableAnalysis.StaticOutsideClass" />
	</rule>
	<rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis">
		<severity>6</severity>
		<!-- $_EXTKEY is pre-defined -->
		<properties>
			<property name="validUndefinedVariableNames" value="_EXTKEY EM_CONF TYPO3_CONF_VARS" />
			<property name="allowUndefinedVariablesInFileScope" value="true" />
			<property name="allowUnusedVariablesInFileScope" value="true" />
			<property name="allowUnusedFunctionParameters" value="true" />
		</properties>
	</rule>

	<!-- <rule ref="Generic.Arrays.DisallowLongArraySyntax" /> -->
	<!-- <rule ref="Generic.CodeAnalysis.EmptyStatement" /> -->
	<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

	<rule ref="Generic.Classes.OpeningBraceSameLine" />

	<!-- <rule ref="Generic.Commenting.DocComment" /> -->
	<rule ref="Generic.Commenting.Fixme" />
	<rule ref="Generic.Commenting.Todo" />

	<rule ref="Generic.ControlStructures.InlineControlStructure" />

	<rule ref="Generic.Files.ByteOrderMark" />
	<rule ref="Generic.Files.EndFileNewline" />
	<rule ref="Generic.Files.InlineHTML" />
	<rule ref="Generic.Files.LineEndings" />
	<rule ref="Generic.Files.OneClassPerFile" />
	<rule ref="Generic.Files.OneInterfacePerFile" />
	<rule ref="Generic.Files.OneTraitPerFile" />

	<rule ref="Generic.Formatting.DisallowMultipleStatements" />
	<!-- <rule ref="Generic.Formatting.MultipleStatementAlignment" /> -->
	<rule ref="Generic.Formatting.NoSpaceAfterCast" />
	<!-- <rule ref="Generic.Formatting.SpaceAfterCast" /> -->

	<rule ref="Generic.Functions.CallTimePassByReference" />
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing">
		<exclude-pattern>*/TCA/*.php</exclude-pattern>
	</rule>
	<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />

	<!-- Many TYPO3 Hooks contain underscores
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName">
		<properties>
			<property name="strict" value="false" />
		</properties>
	</rule> -->
	<!-- <rule ref="Generic.NamingConventions.ConstructorName" /> -->
	<rule ref="Generic.NamingConventions.UpperCaseConstantName">
		<exclude-pattern>*/Configuration/TCA/*.php</exclude-pattern>
		<exclude-pattern>*/database/*.php</exclude-pattern>
	</rule>

	<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
	<rule ref="Generic.PHP.DeprecatedFunctions" />
	<rule ref="Generic.PHP.DisallowShortOpenTag" />
	<rule ref="Generic.PHP.ForbiddenFunctions" />
	<rule ref="Generic.PHP.LowerCaseConstant" />
	<rule ref="Generic.PHP.LowerCaseKeyword" />
	<rule ref="Generic.PHP.LowerCaseType" />

	<!-- UnnecessaryStringConcat does not check for newlines -->
	<!-- <rule ref="Generic.Strings.UnnecessaryStringConcat" /> -->

	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent" />
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="tabIndent" value="true" />
			<property name="indent" value="1" />
			<property name="exact" value="false" />
			<property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
		</properties>
	</rule>


	<rule ref="MySource.Objects.AssignThis" />
	<rule ref="MySource.PHP.EvalObjectFactory" />
	<rule ref="MySource.Strings.JoinStrings" />


	<rule ref="PEAR.ControlStructures.ControlSignature">
		<exclude-pattern>*/TCA/*.php</exclude-pattern>
	</rule>
	<rule ref="PEAR.Functions.ValidDefaultValue" />
	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent">
		<properties>
			<property name="indent" value="1"/>
		</properties>
	</rule>


	<rule ref="PSR1.Classes.ClassDeclaration" />
	<!-- <rule ref="PSR1.Files.SideEffects" /> -->


	<rule ref="PSR2.Namespaces.NamespaceDeclaration" />
	<rule ref="PSR2.Namespaces.UseDeclaration" />


	<rule ref="Zend.Files.ClosingTag" />


	<rule ref="Squiz.Arrays.ArrayBracketSpacing" />

	<rule ref="Squiz.Classes.LowercaseClassKeywords" />
	<rule ref="Squiz.Classes.SelfMemberReference" />

	<rule ref="Squiz.Commenting.DocCommentAlignment" />
	<rule ref="Squiz.Commenting.EmptyCatchComment" />

	<rule ref="Squiz.Scope.StaticThisUsage" />

	<rule ref="Squiz.Strings.ConcatenationSpacing">
		<properties>
			<property name="spacing" value="1"/>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>

	<rule ref="Squiz.PHP.Eval" />
	<rule ref="Squiz.PHP.GlobalKeyword" />
	<rule ref="Squiz.PHP.LowercasePHPFunctions" />

	<!-- <rule ref="Squiz.Strings.ConcatenationSpacing">
		<properties>
			<property name="spacing" value="1" />
			<property name="ignoreNewlines" value="1" />
		</properties>
	</rule> -->
	<rule ref="Squiz.Strings.DoubleQuoteUsage" />
	<rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Strings.EchoedStrings" />

	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="1" />
		</properties>
	</rule>
</ruleset>